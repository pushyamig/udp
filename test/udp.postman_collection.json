{
  "info": {
    "_postman_id": "e357d54e-c624-484f-bb20-45b91804d4b9",
    "name": "udp",
    "description": "# Requests and tests for Unizin Data Platform (UDP)\n\nAuthor: Lance E Sloan (lsloan@umich.edu)\n\nRequires Postman environment keys:\n* udp_token\n",
    "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
  },
  "item": [
    {
      "name": "E-25",
      "description": "",
      "item": [
        {
          "name": "call_to_udp",
          "event": [
            {
              "listen": "prerequest",
              "script": {
                "id": "aeafa23b-4c74-4e41-92d9-9694498e24c3",
                "type": "text/javascript",
                "exec": [
                  "eval(pm.variables.get('initRequest')); // Defined in collection pre-request script"
                ]
              }
            },
            {
              "listen": "test",
              "script": {
                "id": "bceb7ac7-c0f7-4fff-adb6-0953c77a9ff1",
                "type": "text/javascript",
                "exec": [
                  "pm.test('Response from UDP: 200 OK', function () {",
                  "    pm.response.to.have.status(200);",
                  "});",
                  "",
                  "var resp = pm.expect(pm.response);",
                  "",
                  "pm.test('Response is JSON: OK to process', function () { ",
                  "    resp.ok;",
                  "    resp.header('content-type');",
                  "    pm.expect(pm.response.headers.get('content-type')).match(/^application\\/json/i);",
                  "    resp.json; ",
                  "});",
                  "",
                  "function parseResp(data){",
                  "    msg = jsonData.accepted_events[0];",
                  "    idWithUrn = msg.id;",
                  "    id=idWithUrn.split(\":\")[2];",
                  "    topic = msg.topics;",
                  "    return {\"id\":id,\"topic\":topic};",
                  "}",
                  "var jsonData = pm.response.json();",
                  "var parsedData = parseResp(jsonData);",
                  "var bq = parsedData.id;",
                  "// var bq = \"9eda84a3-79d0-47aa-b868-0be6dc2143f3\";",
                  "pm.environment.set('bq',bq);",
                  "",
                  "var gtCheck = \"UDP accepted LC event in \\\"Gold\\\" queue with id: \\\"{0}\\\"\".format(bq);",
                  "pm.test(gtCheck, function() {",
                  "    var expectedQName='STREAM-unizin-umich-umich-stream-GoldUMichLectureCapture-'+pm.environment.get(\"env\");",
                  "    var eventId = bq;",
                  "    var udpQueueName = Object.keys(parsedData.topic)[0] ;",
                  "    var udpQueueId = Object.values(parsedData.topic)[0] ;",
                  "    pm.expect(udpQueueName).equal(expectedQName);",
                  "    pm.expect(parseInt(udpQueueId, 10)).gt(40096419239401);",
                  "});",
                  "",
                  "",
                  "delayRequestToBigQuery();",
                  "",
                  "function delayRequestToBigQuery() {",
                  "    setTimeout(function () {",
                  "        console.log(\"waiting here for 30 seconds before making BQ call\");",
                  "    },30000);",
                  "}",
                  ""
                ]
              }
            }
          ],
          "request": {
            "auth": {
              "type": "bearer",
              "bearer": [
                {
                  "key": "token",
                  "value": "{{udp_token}}",
                  "type": "string"
                }
              ]
            },
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"sensor\": \"leccap_caliper_postman\",\n  \"sendTime\": \"{{timestampUtcIso8601}}\",\n  \"dataVersion\": \"http://purl.imsglobal.org/ctx/caliper/v1p1\",\n  \"data\": [\n    {\n  \"@context\": \"http://purl.imsglobal.org/ctx/caliper/v1p1\",\n  \"id\": \"{{eventId}}\",\n  \"type\": \"SessionEvent\",\n  \"actor\": \"https://mcommunity.umich.edu/#profile:{{udp_uniqname}}\",\n  \"action\": \"LoggedIn\",\n  \"object\": \"https://leccap-beta.engin.umich.edu/#applicationName=Lecture+Capture\",\n  \"eventTime\": \"{{timestampUtcIso8601}}\",\n  \"edApp\": \"https://leccap-beta.engin.umich.edu/#applicationName=Lecture+Capture\",\n  \"group\": {\n    \"academicSession\": \"w18\",\n    \"courseNumber\": \"MFG 599\",\n    \"dateCreated\": \"2013-08-06T17:33:14.000Z\",\n    \"id\": \"https://leccap-beta.engin.umich.edu/leccap/site/i8nnmrgfvqkmcyq8wps#type=CourseOffering\",\n    \"name\": \"Engineering test course\",\n    \"type\": \"CourseOffering\"\n  },\n  \"membership\": {\n    \"id\": \"https://leccap-beta.engin.umich.edu/leccap/site/i8nnmrgfvqkmcyq8wps#type=Membership&member={{udp_uniqname}}\",\n    \"member\": \"https://mcommunity.umich.edu/#profile:{{udp_uniqname}}\",\n    \"organization\": \"https://leccap-beta.engin.umich.edu/leccap/site/i8nnmrgfvqkmcyq8wps#type=CourseOffering\",\n    \"roles\": [\n      \"Learner\"\n    ],\n    \"status\": \"Active\",\n    \"type\": \"Membership\"\n  },\n  \"session\": {\n    \"id\": \"urn:session-id-localized:leccap-beta.engin.umich.edu/44l9rs836ckb6ql21ldvhrmku1\",\n    \"startedAtTime\": \"{{timestampUtcIso8601}}\",\n    \"type\": \"Session\",\n    \"user\": \"https://mcommunity.umich.edu/#profile:{{udp_uniqname}}\"\n  },\n  \"federatedSession\": {\n    \"id\": \"urn:session-id-localized:leccap-beta.engin.umich.edu/lti/oauth_nonce/5a81e2eb557427.65333446\",\n    \"messageParameters\": {\n      \"custom_canvas_course_id\": \"211644\",\n      \"custom_canvas_user_id\": \"151503\",\n      \"lis_course_offering_sourcedid\": \"{{udp_lis_course_offering_sourcedid}}\",\n      \"lis_person_sourcedid\": \"{{udp_lis_person_sourcedid}}\",\n      \"resource_link_id\": \"43814f5790e0379119130a37450d6d126a70b2c1\"\n    },\n    \"type\": \"LtiSession\",\n    \"user\": \"https://mcommunity.umich.edu/#profile:{{udp_uniqname}}\"\n  }\n}\n  ]\n}\n"
            },
            "url": {
              "raw": "https://unizin-udp-data-umich-dev.appspot.com/",
              "protocol": "https",
              "host": [
                "unizin-udp-data-umich-dev",
                "appspot",
                "com"
              ],
              "path": [
                ""
              ]
            },
            "description": "Requires Postman environment keys:\n* udp_token\n* udp_uniqname\n* udp_lis_course_offering_sourcedid\n* udp_lis_person_sourcedid"
          },
          "response": [
            {
              "id": "ef118993-d166-4e69-9b8f-f1826f6fa5ce",
              "name": "Ex. 1: SessionEvent, LoggedIn",
              "originalRequest": {
                "method": "POST",
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"sensor\": \"leccap_caliper_postman\",\n  \"sendTime\": \"{{timestampUtcIso8601}}\",\n  \"dataVersion\": \"http://purl.imsglobal.org/ctx/caliper/v1p1\",\n  \"data\": [\n    {\n  \"@context\": \"http://purl.imsglobal.org/ctx/caliper/v1p1\",\n  \"id\": \"{{eventId}}\",\n  \"type\": \"SessionEvent\",\n  \"actor\": \"https://mcommunity.umich.edu/#profile:{{udp_uniqname}}\",\n  \"action\": \"LoggedIn\",\n  \"object\": \"https://leccap-beta.engin.umich.edu/#applicationName=Lecture+Capture\",\n  \"eventTime\": \"{{timestampUtcIso8601}}\",\n  \"edApp\": \"https://leccap-beta.engin.umich.edu/#applicationName=Lecture+Capture\",\n  \"group\": {\n    \"academicSession\": \"w18\",\n    \"courseNumber\": \"MFG 599\",\n    \"dateCreated\": \"2013-08-06T17:33:14.000Z\",\n    \"id\": \"https://leccap-beta.engin.umich.edu/leccap/site/i8nnmrgfvqkmcyq8wps#type=CourseOffering\",\n    \"name\": \"Engineering test course\",\n    \"type\": \"CourseOffering\"\n  },\n  \"membership\": {\n    \"id\": \"https://leccap-beta.engin.umich.edu/leccap/site/i8nnmrgfvqkmcyq8wps#type=Membership&member={{udp_uniqname}}\",\n    \"member\": \"https://mcommunity.umich.edu/#profile:{{udp_uniqname}}\",\n    \"organization\": \"https://leccap-beta.engin.umich.edu/leccap/site/i8nnmrgfvqkmcyq8wps#type=CourseOffering\",\n    \"roles\": [\n      \"Learner\"\n    ],\n    \"status\": \"Active\",\n    \"type\": \"Membership\"\n  },\n  \"session\": {\n    \"id\": \"urn:session-id-localized:leccap-beta.engin.umich.edu/44l9rs836ckb6ql21ldvhrmku1\",\n    \"startedAtTime\": \"{{timestampUtcIso8601}}\",\n    \"type\": \"Session\",\n    \"user\": \"https://mcommunity.umich.edu/#profile:{{udp_uniqname}}\"\n  },\n  \"federatedSession\": {\n    \"id\": \"urn:session-id-localized:leccap-beta.engin.umich.edu/lti/oauth_nonce/5a81e2eb557427.65333446\",\n    \"messageParameters\": {\n      \"custom_canvas_course_id\": \"211644\",\n      \"custom_canvas_user_id\": \"151503\",\n      \"lis_course_offering_sourcedid\": \"{{udp_lis_course_offering_sourcedid}}\",\n      \"lis_person_sourcedid\": \"{{udp_lis_person_sourcedid}}\",\n      \"resource_link_id\": \"43814f5790e0379119130a37450d6d126a70b2c1\"\n    },\n    \"type\": \"LtiSession\",\n    \"user\": \"https://mcommunity.umich.edu/#profile:{{udp_uniqname}}\"\n  }\n}\n  ]\n}\n"
                },
                "url": {
                  "raw": "https://unizin-udp-data-umich-dev.appspot.com/",
                  "protocol": "https",
                  "host": [
                    "unizin-udp-data-umich-dev",
                    "appspot",
                    "com"
                  ],
                  "path": [
                    ""
                  ]
                }
              },
              "status": "OK",
              "code": 200,
              "_postman_previewlanguage": "html",
              "header": [
                {
                  "key": "Content-Encoding",
                  "value": "gzip",
                  "type": "text",
                  "enabled": true,
                  "name": "Content-Encoding",
                  "description": ""
                },
                {
                  "key": "Content-Type",
                  "value": "text/html; charset=utf-8",
                  "type": "text",
                  "enabled": true,
                  "name": "Content-Type",
                  "description": ""
                }
              ],
              "cookie": [],
              "body": "{\"urn:uuid:654e4d31-e56d-45cc-9661-deb323080f7a\": {\"STREAM-unizin-umich-umich-stream-GoldUMichLectureCapture-dev\": \"39447962165063\"}}"
            }
          ]
        },
        {
          "name": "call_to_bq",
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "cd2ac4fc-30fd-4de6-ac01-19e4a2658d40",
                "type": "text/javascript",
                "exec": [
                  "var resp = pm.response;",
                  "pm.test('Response from BQ: 200 OK', function () {",
                  "    if(pm.response.code == 200){",
                  "        console.log(\"Happy response from BQ\");",
                  "        pm.expect(pm.response.code).to.equal(200);",
                  "    }else{",
                  "        console.log(\"Unhappy response for BQ\",pm.response.code);",
                  "        pm.expect(resp.code,resp.json().error.message).to.equal(200);",
                  "    }",
                  "});",
                  "",
                  "pm.test('Response is JSON: OK to process', function () { ",
                  "    pm.expect(pm.response.headers.get('content-type')).match(/^application\\/json/i);",
                  "});",
                  "",
                  "var bq = pm.environment.get(\"bq\");",
                  "var gtBQCheck = \"Event with Id \\\"{0}\\\" found in BQ under 30 sec\".format(bq);",
                  "",
                  "pm.test(gtBQCheck, function () {",
                  "    var bqRes = resp.json();",
                  "    var tableRows = bqRes.rows[0];",
                  "    var tableId=tableRows.f[0].v;",
                  "    pm.expect((tableId)).to.equal(bq);",
                  "});"
                ]
              }
            }
          ],
          "request": {
            "auth": {
              "type": "bearer",
              "bearer": [
                {
                  "key": "token",
                  "value": "{{gcp_token}}",
                  "type": "string"
                }
              ]
            },
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n    \"query\": \"select * from learning_datasets.enriched_events where id = '{{bq}}'\"\n}"
            },
            "url": {
              "raw": "https://www.googleapis.com/bigquery/v2/projects/unizin-udp-data-umich-dev/queries",
              "protocol": "https",
              "host": [
                "www",
                "googleapis",
                "com"
              ],
              "path": [
                "bigquery",
                "v2",
                "projects",
                "unizin-udp-data-umich-dev",
                "queries"
              ]
            }
          },
          "response": []
        }
      ]
    }
  ],
  "auth": {
    "type": "bearer",
    "bearer": [
      {
        "key": "token",
        "value": "{{udp_token}}",
        "type": "string"
      }
    ]
  },
  "event": [
    {
      "listen": "prerequest",
      "script": {
        "id": "5dca8aaa-9102-4b9a-afc4-4e38ae5bbe12",
        "type": "text/javascript",
        "exec": [
          "// Postman (v5.5.3) doesn't pass definitions from collection to folder to request.",
          "// To get unique values (timestamp, ID, etc.) in each request, define them here.",
          "// Then in the request's pre-request script, use:",
          "//      eval(pm.variables.get('initRequest'));",
          "function initRequest() {",
          "    pm.globals.set('timestampUtcIso8601', (new Date()).toISOString());",
          "    pm.globals.set('randomString', Math.random().toString(26).substring(2).replace(/[0-9]/g, c => 'qrstuvwxyz'[c]));",
          "",
          "    var uuid = require('uuid');",
          "    pm.globals.set('eventId', 'urn:uuid:' + uuid.v4());",
          "}",
          "String.prototype.format = function () {",
          "        var a = this;",
          "        for (var k in arguments) {",
          "            a = a.replace(new RegExp(\"\\\\{\" + k + \"\\\\}\", 'g'), arguments[k]);",
          "        }",
          "        return a;",
          "};",
          "pm.globals.set(initRequest.name, initRequest.toString() + initRequest.name + '()');",
          ""
        ]
      }
    },
    {
      "listen": "test",
      "script": {
        "id": "42eee30c-559d-4d33-abb9-64aa5bcccceb",
        "type": "text/javascript",
        "exec": [
          ""
        ]
      }
    }
  ]
}